{"version":3,"sources":["components/FeedbackOptions/feedbackOptions.module.css","components/Section/section.module.css","components/Statistics/statistics.module.css","components/Notification/notification.module.css","components/FeedbackOptions/index.jsx","components/Statistics/index.jsx","components/Notification/index.jsx","components/Section/index.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","feedbackSection","buttons","map","option","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","notification","Section","title","children","section","App","state","onClickBtn","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","Object","keys","this","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,kC,iBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,aAAe,qC,oJCClB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/C,OACI,yBAASC,UAAWC,IAAOC,gBAA3B,SACI,qBAAKF,UAAWC,IAAOE,QAAvB,SACKL,EAAQM,KAAI,SAAAC,GAAM,OACf,wBAEIC,KAAK,SACLN,UAAWC,IAAOM,OAClBC,QAAS,kBAAMT,EAAgBM,IAJnC,SAMCA,GALQA,U,oBCNd,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,0BAASd,UAAWC,IAAOc,WAA3B,UACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,U,qBCPG,SAASE,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACtC,OACI,mBAAGjB,UAAWC,IAAOiB,aAArB,SAAoCD,I,oBCF3B,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,0BAASrB,UAAWC,IAAOqB,QAA3B,UACI,mBAAGtB,UAAWC,IAAOmB,MAArB,SAA6BA,IAC5BC,K,ICIQE,E,4MACjBC,MAAQ,CACJd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcTa,WAAa,SAAApB,GACT,EAAKqB,UAAS,SAAAC,GAAS,sBAClBtB,EAASsB,EAAUtB,GAAU,O,EAItCuB,mBAAqB,WACjB,OAAO,EAAKJ,MAAMd,KAAO,EAAKc,MAAMb,QAAU,EAAKa,MAAMZ,K,EAG7DiB,gCAAkC,WAC9B,OAAOC,KAAKC,MAAO,EAAKP,MAAMd,KAAO,EAAKkB,qBAAwB,M,uDAIlE,OACI,qCACA,cAACT,EAAD,CAASC,MAAM,wBAAf,SACI,cAACvB,EAAD,CAAiBC,QAASkC,OAAOC,KAAKC,KAAKV,OAAQzB,gBAAiBmC,KAAKT,eAE7E,cAACN,EAAD,CAASC,MAAM,aAAf,SACCc,KAAKN,qBAAuB,EACzB,cAACnB,EAAD,CACIC,KAAMwB,KAAKV,MAAMd,KACjBC,QAASuB,KAAKV,MAAMb,QACpBC,IAAKsB,KAAKV,MAAMZ,IAChBC,MAAOqB,KAAKN,qBACZd,mBAAoBoB,KAAKL,oCAG7B,cAACb,EAAD,CAAcC,QAAQ,+B,GAhDLkB,a,MCNjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.0020992f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedbackOptions_button__3wuoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1vkVl\",\"title\":\"section_title__30CcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__ZWGto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"notification_notification__26qRY\"};","import styles from './feedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n    return (\r\n        <section className={styles.feedbackSection}>\r\n            <div className={styles.buttons}>\r\n                {options.map(option => (\r\n                    <button\r\n                        key={option}\r\n                        type=\"button\"\r\n                        className={styles.button}\r\n                        onClick={() => onLeaveFeedback(option)}\r\n                    >\r\n                    {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </section>\r\n    );\r\n}","import styles from './statistics.module.css';\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <section className={styles.statistics}>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </section>\r\n    );\r\n}","import styles from './notification.module.css';\r\n\r\nexport default function Notification ({ message }) {\r\n  return (\r\n      <p className={styles.notification}>{message}</p>\r\n  );\r\n}","import styles from './section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <section className={styles.section}>\r\n            <p className={styles.title}>{title}</p>\r\n            {children}\r\n        </section>\r\n    );\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// js\r\nimport FeedbackOptions from './components/FeedbackOptions/index';\r\nimport Statistics from './components/Statistics/index';\r\nimport Notification from './components/Notification/index';\r\nimport Section from './components/Section/index';\r\n// json\r\n\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tgood: PropTypes.number,\r\n\t\tneutral: PropTypes.number,\r\n\t\tbad: PropTypes.number,\r\n\t\ttotal: PropTypes.number,\r\n        positivePercentage: PropTypes.number,\r\n        title: PropTypes.string,\r\n\t\toptions: PropTypes.string,\r\n\t\tonLeaveFeedback: PropTypes.func,\r\n\t};\r\n\r\n    onClickBtn = option => {\r\n        this.setState(prevState => ({\r\n            [option]: prevState[option] + 1,\r\n        }));\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        return this.state.good + this.state.neutral + this.state.bad;\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Section title=\"Please leave feedback\">\r\n                <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onClickBtn} />\r\n            </Section>\r\n            <Section title=\"Statistics\">\r\n            {this.countTotalFeedback() > 0 ? (\r\n                <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={this.countTotalFeedback()}\r\n                    positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                />\r\n            ) : (\r\n                <Notification message=\"No feedback given\" />\r\n            )}\r\n            </Section>\r\n            </>\r\n        );\r\n    }\r\n}","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}